{"version":3,"sources":["svg4everybody/svg4everybody.legacy.js"],"names":["root","factory","define","amd","svg4everybody","module","exports","this","embed","parent","svg","target","fragment","document","createDocumentFragment","viewBox","hasAttribute","getAttribute","setAttribute","clone","cloneNode","childNodes","length","appendChild","firstChild","loadreadystatechange","xhr","onreadystatechange","readyState","cachedDocument","_cachedDocument","implementation","createHTMLDocument","body","innerHTML","responseText","_cachedTarget","_embeds","splice","map","item","id","getElementById","getSVGAncestor","node","nodeName","toLowerCase","parentNode","rawopts","nosvg","fallback","opts","Object","src","replace","exec","test","navigator","userAgent","createElement","polyfill","inIframe","window","top","self","match","requests","requestAnimationFrame","setTimeout","uses","getElementsByTagName","numberOfSvgUseElementsToBypass","oninterval","index","use","attributeName","img","style","cssText","clientWidth","clientHeight","replaceChild","validate","removeChild","srcSplit","split","url","shift","join","XMLHttpRequest","open","send","push"],"mappings":"CAAC,SAASA,EAAMC,GACZ,mBAAqBC,QAAUA,OAAOC,IACtCD,OAAO,GAAI,WACP,OAAOF,EAAKI,cAAgBH,MAC3B,iBAAmBI,QAAUA,OAAOC,QAGzCD,OAAOC,QAAUL,IAAYD,EAAKI,cAAgBH,IAPrD,CAQCM,KAAM,WAEJ,SAASC,EAAMC,EAAQC,EAAKC,GAExB,GAAIA,EAAQ,CAER,IAAIC,EAAWC,SAASC,yBAA0BC,GAAWL,EAAIM,aAAa,YAAcL,EAAOM,aAAa,WAEhHF,GAAWL,EAAIQ,aAAa,UAAWH,GAEvC,IACA,IAAII,EAAQR,EAAOS,WAAU,GAAKD,EAAME,WAAWC,QAC/CV,EAASW,YAAYJ,EAAMK,YAG/Bf,EAAOc,YAAYX,IAG3B,SAASa,EAAqBC,GAE1BA,EAAIC,mBAAqB,WAErB,GAAI,IAAMD,EAAIE,WAAY,CAEtB,IAAIC,EAAiBH,EAAII,gBAEzBD,KAAmBA,EAAiBH,EAAII,gBAAkBjB,SAASkB,eAAeC,mBAAmB,KACtFC,KAAKC,UAAYR,EAAIS,aAAcT,EAAIU,cAAgB,IACtEV,EAAIW,QAAQC,OAAO,GAAGC,IAAI,SAASC,GAE/B,IAAI7B,EAASe,EAAIU,cAAcI,EAAKC,IAEpC9B,IAAWA,EAASe,EAAIU,cAAcI,EAAKC,IAAMZ,EAAea,eAAeF,EAAKC,KAEpFjC,EAAMgC,EAAK/B,OAAQ+B,EAAK9B,IAAKC,OAIzCe,EAAIC,qBA2ER,SAASgB,EAAeC,GACpB,IAAK,IAAIlC,EAAMkC,EAAM,QAAUlC,EAAImC,SAASC,gBAAkBpC,EAAMA,EAAIqC,cACxE,OAAOrC,EAEX,OA7EA,SAAuBsC,GAyDnB,IAAIC,EAAOC,EAAUC,EAAOC,OAAOJ,GAEnCE,EAAWC,EAAKD,UAAY,SAASG,GACjC,OAAOA,EAAIC,QAAQ,UAAW,IAAIA,QAAQ,IAAK,KAAKA,QAAQ,MAAO,IAAM,QAAU,UAAUC,KAAKF,IAAQ,CAAE,KAAM,KAEtHJ,EAAQ,UAAWE,EAAOA,EAAKF,MAAQ,iBAAiBO,KAAKC,UAAUC,cAE7D7C,SAAS8C,cAAc,OAAQ9C,SAAS8C,cAAc,QAEhE,IAAIC,EAAyMC,EAAWC,OAAOC,MAAQD,OAAOE,KAC9OJ,EAAW,aAAcT,EAAOA,EAAKS,SADX,oBACgCJ,KAAKC,UAAUC,YADd,0CACsCF,KAAKC,UAAUC,aAAeD,UAAUC,UAAUO,MADM,wBACgB,IAAI,GAAK,QAAUR,UAAUC,UAAUO,MAD/F,2BACkH,IAAI,GAAK,KADnD,mBACiET,KAAKC,UAAUC,YAAcG,EAEvR,IAAIK,EAAW,GAAIC,EAAwBL,OAAOK,uBAAyBC,WAAYC,EAAOxD,SAASyD,qBAAqB,OAAQC,EAAiC,EAErKX,GAtEA,SAASY,IAEL,IACA,IAAIC,EAAQ,EAAGA,EAAQJ,EAAK/C,QAAU,CAElC,IAAIoD,EAAML,EAAKI,GAAQhE,EAASiE,EAAI3B,WAAYrC,EAAMiC,EAAelC,GAAS4C,EAAMqB,EAAIzD,aAAa,eAAiByD,EAAIzD,aAAa,QACvI,IAAKoC,GAAOF,EAAKwB,gBAAkBtB,EAAMqB,EAAIzD,aAAakC,EAAKwB,gBAC/DjE,GAAO2C,GAEH,GAAIJ,EAAO,CAEP,IAAI2B,EAAM/D,SAAS8C,cAAc,OAEjCiB,EAAIC,MAAMC,QAAU,8CACpBF,EAAI1D,aAAa,QAASR,EAAIO,aAAa,UAAYP,EAAIqE,aAAcH,EAAI1D,aAAa,SAAUR,EAAIO,aAAa,WAAaP,EAAIsE,cAEtIJ,EAAIvB,IAAMH,EAASG,EAAK3C,EAAKgE,GAC7BjE,EAAOwE,aAAaL,EAAKF,QAEzB,GAAId,EACA,IAAKT,EAAK+B,UAAY/B,EAAK+B,SAAS7B,EAAK3C,EAAKgE,GAAM,CAEhDjE,EAAO0E,YAAYT,GAEnB,IAAIU,EAAW/B,EAAIgC,MAAM,KAAMC,EAAMF,EAASG,QAAS9C,EAAK2C,EAASI,KAAK,KAE1E,GAAIF,EAAIhE,OAAQ,CAEZ,IAAII,EAAMwC,EAASoB,GAEnB5D,KAAQA,EAAMwC,EAASoB,GAAO,IAAIG,gBAAsBC,KAAK,MAAOJ,GAAM5D,EAAIiE,OAC9EjE,EAAIW,QAAU,IACdX,EAAIW,QAAQuD,KAAK,CACbnF,OAAQA,EACRC,IAAKA,EACL+B,GAAIA,IAERhB,EAAqBC,QAGrBlB,EAAMC,EAAQC,EAAKG,SAAS6B,eAAeD,UAI7CgC,IAASF,QAMrBE,IAIRJ,EAAK/C,QAAU+C,EAAK/C,OAASiD,EAAiC,IAAMJ,EAAsBK,EAAY,IAgBhGA","file":"svg4everybody.legacy.min.js","sourcesContent":["!function(root, factory) {\n    \"function\" == typeof define && define.amd ? // AMD. Register as an anonymous module unless amdModuleId is set\n    define([], function() {\n        return root.svg4everybody = factory();\n    }) : \"object\" == typeof module && module.exports ? // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory() : root.svg4everybody = factory();\n}(this, function() {\n    /*! svg4everybody v2.1.9 | github.com/jonathantneal/svg4everybody */\n    function embed(parent, svg, target) {\n        // if the target exists\n        if (target) {\n            // create a document fragment to hold the contents of the target\n            var fragment = document.createDocumentFragment(), viewBox = !svg.hasAttribute(\"viewBox\") && target.getAttribute(\"viewBox\");\n            // conditionally set the viewBox on the svg\n            viewBox && svg.setAttribute(\"viewBox\", viewBox);\n            // copy the contents of the clone into the fragment\n            for (// clone the target\n            var clone = target.cloneNode(!0); clone.childNodes.length; ) {\n                fragment.appendChild(clone.firstChild);\n            }\n            // append the fragment into the svg\n            parent.appendChild(fragment);\n        }\n    }\n    function loadreadystatechange(xhr) {\n        // listen to changes in the request\n        xhr.onreadystatechange = function() {\n            // if the request is ready\n            if (4 === xhr.readyState) {\n                // get the cached html document\n                var cachedDocument = xhr._cachedDocument;\n                // ensure the cached html document based on the xhr response\n                cachedDocument || (cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument(\"\"), \n                cachedDocument.body.innerHTML = xhr.responseText, xhr._cachedTarget = {}), // clear the xhr embeds list and embed each item\n                xhr._embeds.splice(0).map(function(item) {\n                    // get the cached target\n                    var target = xhr._cachedTarget[item.id];\n                    // ensure the cached target\n                    target || (target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id)), \n                    // embed the target into the svg\n                    embed(item.parent, item.svg, target);\n                });\n            }\n        }, // test the ready state change immediately\n        xhr.onreadystatechange();\n    }\n    function svg4everybody(rawopts) {\n        function oninterval() {\n            // while the index exists in the live <use> collection\n            for (// get the cached <use> index\n            var index = 0; index < uses.length; ) {\n                // get the current <use>\n                var use = uses[index], parent = use.parentNode, svg = getSVGAncestor(parent), src = use.getAttribute(\"xlink:href\") || use.getAttribute(\"href\");\n                if (!src && opts.attributeName && (src = use.getAttribute(opts.attributeName)), \n                svg && src) {\n                    // if running with legacy support\n                    if (nosvg) {\n                        // create a new fallback image\n                        var img = document.createElement(\"img\");\n                        // force display in older IE\n                        img.style.cssText = \"display:inline-block;height:100%;width:100%\", // set the fallback size using the svg size\n                        img.setAttribute(\"width\", svg.getAttribute(\"width\") || svg.clientWidth), img.setAttribute(\"height\", svg.getAttribute(\"height\") || svg.clientHeight), \n                        // set the fallback src\n                        img.src = fallback(src, svg, use), // replace the <use> with the fallback image\n                        parent.replaceChild(img, use);\n                    } else {\n                        if (polyfill) {\n                            if (!opts.validate || opts.validate(src, svg, use)) {\n                                // remove the <use> element\n                                parent.removeChild(use);\n                                // parse the src and get the url and id\n                                var srcSplit = src.split(\"#\"), url = srcSplit.shift(), id = srcSplit.join(\"#\");\n                                // if the link is external\n                                if (url.length) {\n                                    // get the cached xhr request\n                                    var xhr = requests[url];\n                                    // ensure the xhr request exists\n                                    xhr || (xhr = requests[url] = new XMLHttpRequest(), xhr.open(\"GET\", url), xhr.send(), \n                                    xhr._embeds = []), // add the svg and id as an item to the xhr embeds list\n                                    xhr._embeds.push({\n                                        parent: parent,\n                                        svg: svg,\n                                        id: id\n                                    }), // prepare the xhr ready state change event\n                                    loadreadystatechange(xhr);\n                                } else {\n                                    // embed the local id into the svg\n                                    embed(parent, svg, document.getElementById(id));\n                                }\n                            } else {\n                                // increase the index when the previous value was not \"valid\"\n                                ++index, ++numberOfSvgUseElementsToBypass;\n                            }\n                        }\n                    }\n                } else {\n                    // increase the index when the previous value was not \"valid\"\n                    ++index;\n                }\n            }\n            // continue the interval\n            (!uses.length || uses.length - numberOfSvgUseElementsToBypass > 0) && requestAnimationFrame(oninterval, 67);\n        }\n        var nosvg, fallback, opts = Object(rawopts);\n        // configure the fallback method\n        fallback = opts.fallback || function(src) {\n            return src.replace(/\\?[^#]+/, \"\").replace(\"#\", \".\").replace(/^\\./, \"\") + \".png\" + (/\\?[^#]+/.exec(src) || [ \"\" ])[0];\n        }, // set whether to shiv <svg> and <use> elements and use image fallbacks\n        nosvg = \"nosvg\" in opts ? opts.nosvg : /\\bMSIE [1-8]\\b/.test(navigator.userAgent), \n        // conditionally shiv <svg> and <use>\n        nosvg && (document.createElement(\"svg\"), document.createElement(\"use\"));\n        // set whether the polyfill will be activated or not\n        var polyfill, olderIEUA = /\\bMSIE [1-8]\\.0\\b/, newerIEUA = /\\bTrident\\/[567]\\b|\\bMSIE (?:9|10)\\.0\\b/, webkitUA = /\\bAppleWebKit\\/(\\d+)\\b/, olderEdgeUA = /\\bEdge\\/12\\.(\\d+)\\b/, edgeUA = /\\bEdge\\/.(\\d+)\\b/, inIframe = window.top !== window.self;\n        polyfill = \"polyfill\" in opts ? opts.polyfill : olderIEUA.test(navigator.userAgent) || newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537 || edgeUA.test(navigator.userAgent) && inIframe;\n        // create xhr requests object\n        var requests = {}, requestAnimationFrame = window.requestAnimationFrame || setTimeout, uses = document.getElementsByTagName(\"use\"), numberOfSvgUseElementsToBypass = 0;\n        // conditionally start the interval if the polyfill is active\n        polyfill && oninterval();\n    }\n    function getSVGAncestor(node) {\n        for (var svg = node; \"svg\" !== svg.nodeName.toLowerCase() && (svg = svg.parentNode); ) {}\n        return svg;\n    }\n    return svg4everybody;\n});"]}